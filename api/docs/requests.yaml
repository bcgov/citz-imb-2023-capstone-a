components:
### SCHEMAS ###
  schemas:
    ReimbursementRequestObject:
      type: object
      description: A single request entry
      properties: 
        firstName:
          type: string
          example: Joe
        lastName:
          type: string
          example: Smith
        employeeId:
          type: integer
          example: 123456
        idir:
          type: string
          example: W0A0A0A0A0A0A0A0A0A0A0A0A0A0A0A0
        itemsPurchased:
          type: array
          items:
            type: string
          example:
            - Toothpaste
            - Oranges
        totalCost:
          type: number
          example: 34.55
        purchaseDate:
          type: string
          example: 2023-05-01T00:00:00-07:00
        attachReceipts:
          type: array
          items:
            type: object
            properties:
              storage:
                type: string
                example: chefs
              url:
                type: string
                example: /app/api/v1/files/fd667f16-bd58-416d-bf74-2011a53361a8
              size:
                type: integer
                example: 9234
              data:
                type: object
                properties:
                  id:
                    type: string
                    example: fd667f16-bd58-416d-bf74-2011a53361a8
              originalName:
                type: string
                example: myfile.pdf              
        approvalDate:
          type: string
          example: 2023-05-01T00:00:00-07:00
        attachApproval:
          type: array
          items:
            type: object
            properties:
              storage:
                type: string
                example: chefs
              url:
                type: string
                example: /app/api/v1/files/fd667f16-bd58-416d-bf74-2011a53361a8
              size:
                type: integer
                example: 9234
              data:
                type: object
                properties:
                  id:
                    type: string
                    example: fd667f16-bd58-416d-bf74-2011a53361a8
              originalName:
                type: string
                example: myfile.pdf
        supplierName: 
          type: string
          example: Walmart
        supplierPhoneNumber:
          type: string
          example: (234) 234-2345
        supplierEmail:
          type: string
          example: joesmith@gmail.com
        additionalComments:
          type: string
          example: Have a good day!
      required:
        - firstName
        - lastName
        - employeeId
        - itemsPurchased
        - purchaseDate
        - attachReceipts
        - approvalDate
        - attachApproval

    ReimbursementRequestReceived:
      type: object
      description: The received form data.
      properties:
        data:
          allOf:
          - $ref: '#/components/schemas/ReimbursementRequestObject'
          - type: object
          properties:
            lateEntry:
              type: boolean
              example: false
            submit:
              type: boolean
              example: true

    ReimbursementRequest:
      allOf:
          - $ref: '#/components/schemas/ReimbursementRequestObject'
          - type: object
      description: The received form data.
      properties:
        submissionDate:
          type: string
          example: 2023-04-25T16:51:31.929Z
        state:
          type: number
          example: 0
        _id:
          type: string
          example: 64480513a30c8be7b83d9593
  responses:
    400BadRequestID:
      description: Bad request response.
      content:
        text/plain:
          schema:
            type: string
            example: 'ID was malformed. Cannot complete request.'
    404NoRecords:
      description: No records were found.
      content:
        text/plain:
          schema:
            type: string
            example: 'No record. || No records found. || No matching records found.'

### PATHS ###
paths:
  /requests:
    post:
      tags:
        - Requests
      summary: Receives a request from a CHEFS form.
      description: Receives a request from a CHEFS form.
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ReimbursementRequestReceived'
      responses:
        '201':
          description: OK
          content: 
            application/json:
              schema:
                $ref: '#/components/schemas/ReimbursementRequest'
        '429':
          $ref: '#/components/responses/429TooManyRequests'
    get:
      security:
        - bearerAuth: []
      tags:
        - Requests
      summary: Returns all request documents from the database.
      description:  Returns all request documents from the database.
      parameters:
        - in: query
          name: minimal
          schema:
            type: boolean
            example: true 
          description: Boolean to determine if a minimal version of each document is returned.
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ReimbursementRequest'
        '400':
          $ref: '#/components/responses/400BadRequest'
        '404':
          $ref: '#/components/responses/404NoRecords'
        '429':
          $ref: '#/components/responses/429TooManyRequests'

  /requests/idir:
    get:
      security:
        - bearerAuth: []
      tags:
        - Requests
      summary: Returns all request records originating from a provided IDIR.
      description: Returns all request records originating from a provided IDIR.
      parameters:
        - in: query
          name: minimal
          schema:
            type: boolean
            example: true 
          description: Boolean to determine if a minimal version of each document is returned.
        - in: query
          name: idir
          schema:
            type: string
            example: W0A0A0A0A0A0A0A0A0A0A0A0A0A0A0A0
          description: The IDIR of an employee used to retrieve request records.
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ReimbursementRequest'
        '400':
          $ref: '#/components/responses/400BadRequest'
        '404':
          $ref: '#/components/responses/404NoRecords'
        '429':
          $ref: '#/components/responses/429TooManyRequests'

  /requests/{id}:
    get:
      security:
        - bearerAuth: []
      tags:
        - Requests
      summary: Returns a single request record that matches a specific ID.
      description: Returns a single request record that matches a specific ID.
      parameters:
        - in: path
          name: id
          schema:
            type: string
            example: 64480513a30c8be7b83d9593
          description: The document ID of the request record.
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReimbursementRequest'
        '400':
          $ref: '#/components/responses/400BadRequestID'
        '404':
          $ref: '#/components/responses/404NoRecords'
        '429':
          $ref: '#/components/responses/429TooManyRequests'
    patch:
      security:
        - bearerAuth: []
      tags:
        - Requests
      summary: Updates the state of a single request record that matches a specific ID.
      description: Updates the state of a single request record that matches a specific ID.
      parameters:
        - in: path
          name: id
          schema:
            type: string
            example: 64480513a30c8be7b83d9593
          description: The document ID of the request record.
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                state:
                  type: number
                  example: 1
      responses:
        '200':
          description: OK
          content:
            text/plain:
              schema:
                type: string
                example: 'Record state updated to DENIED.'
        '400':
          $ref: '#/components/responses/400BadRequestID'
        '403':
          #description: Forbidden
            content:
              text/plain:
                schema:
                  type: string
                  example: 'An invalid state was requested.'
        '429':
          $ref: '#/components/responses/429TooManyRequests'
